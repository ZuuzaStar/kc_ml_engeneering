#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ unit-—Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ñ–∏–ª—å–º–æ–≤
"""

import subprocess
import sys
import os

def run_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    print("üöÄ –ó–∞–ø—É—Å–∫ unit-—Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ñ–∏–ª—å–º–æ–≤")
    print("=" * 60)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é app
    app_dir = os.path.dirname(os.path.abspath(__file__)).replace('/tests', '')
    os.chdir(app_dir)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    os.environ["TESTING"] = "true"
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º pytest –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ tests
        result = subprocess.run([
            "python", "-m", "pytest", 
            "tests/", 
            "-v", 
            "--tb=short"
        ], capture_output=True, text=True)
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result.stdout:
            print(result.stdout)
        
        if result.stderr:
            print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
            print(result.stderr)
        
        if result.returncode == 0:
            print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"\n‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏ (–∫–æ–¥: {result.returncode})")
            
        return result.returncode
        
    except FileNotFoundError:
        print("‚ùå pytest –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π:")
        print("   pip install -r tests/requirements.txt")
        return 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}")
        return 1

def run_specific_test(test_path):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ—Å—Ç"""
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_path}")
    print("=" * 60)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é app
    app_dir = os.path.dirname(os.path.abspath(__file__)).replace('/tests', '')
    os.chdir(app_dir)
    
    try:
        result = subprocess.run([
            "python", "-m", "pytest", 
            test_path, 
            "-v", 
            "--tb=short"
        ], capture_output=True, text=True)
        
        if result.stdout:
            print(result.stdout)
        
        if result.stderr:
            print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
            print(result.stderr)
        
        return result.returncode
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞: {e}")
        return 1

if __name__ == "__main__":
    if len(sys.argv) > 1:
        # –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
        test_path = sys.argv[1]
        exit_code = run_specific_test(test_path)
    else:
        # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
        exit_code = run_tests()
    
    sys.exit(exit_code)